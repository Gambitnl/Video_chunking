{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(python app.py:*)",
      "Bash(python -m pip install:*)",
      "Bash(mkdir:*)",
      "Bash(curl:*)",
      "Bash(unzip:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(powershell.exe:*)",
      "Bash(\"f:/Repos/VideoChunking/ffmpeg/bin/ffmpeg.exe\" -version)",
      "Bash(python -c \"import subprocess; result = subprocess.run([''f:/Repos/VideoChunking/ffmpeg/bin/ffmpeg.exe'', ''-version''], capture_output=True, text=True); print(''✓ FFmpeg is accessible from Python'' if result.returncode == 0 else ''✗ Failed'')\")",
      "Bash(python -c \"import subprocess; result = subprocess.run([''f:/Repos/VideoChunking/ffmpeg/bin/ffmpeg.exe'', ''-version''], capture_output=True, text=True); print(''SUCCESS: FFmpeg is accessible from Python'' if result.returncode == 0 else ''FAILED'')\")",
      "Bash(python:*)",
      "Bash(ollama:*)",
      "Bash(del test_party.py)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(where:*)",
      "Bash(start OllamaSetup.exe)",
      "WebSearch",
      "WebFetch",
      "Bash(timeout:*)",
      "Bash(nvidia-smi:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(uvx:*)",
      "Bash(git:*)",
      "mcp__*",
      "Bash(pip install gradio-client)",
      "Read(//c/Users/Gambit/OneDrive/Pictures/Screenshots/**)",
      "Bash(tasklist)",
      "mcp__ide__getDiagnostics",
      "Bash(pytest -m \"not slow\" -v)",
      "Bash(pytest tests/ -v --tb=short)",
      "Bash(Implemented\" section showing Story Notebooks integration, auto-extraction,\n  and individual file storage\n\nAll previously \"planned\" features that are now implemented have been\nproperly documented and marked as complete.\n\nGenerated with Claude Code\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true
}
